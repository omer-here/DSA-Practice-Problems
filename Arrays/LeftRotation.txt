import java.util.*;
public class LeftRotate {
    
    
    //More Optimal single array approach 
  public static void solve1(int arr[], int n) {
        int temp = arr[0]; // storing the first element of array in a variable
    for (int i = 0; i < n - 1; i++) {
        arr[i] = arr[i + 1];
    }
        arr[n - 1] = temp; // assigned the value of variable at the last index
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i]+" ");
        }
}

     // Function to Reverse the array
  public static void Reverse(int[] arr, int start, int end) {
    while (start <= end) {
      int temp = arr[start];
      arr[start] = arr[end];
      arr[end] = temp;
      start++;
      end--;
    }
  }
  // Function to Rotate k elements to left
  public static void Rotatetoleft(int[] arr, int n, int k) {
    // Reverse first k elements
    Reverse(arr, 0, k - 1);
    // Reverse last n-k elements
    Reverse(arr, k , n - 1);
    // Reverse whole array
    Reverse(arr, 0, n - 1);
    

  }
    
    public static void main(String[] args) {
         int n=5;
         int k =2;
  int arr[]= {1,2,3,4,5};
  Rotatetoleft(arr, n, k);
      System.out.println("After Rotating the k elements to left ");
    for (int i = 0; i < n; i++){
      System.out.print(arr[i] + " ");
    System.out.println();
  }
  //solve1(arr, n);
   
}
}