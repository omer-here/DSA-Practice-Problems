import java.util.*;
public class LowerAndUpperBound {
    
    //lowerBound can be use to solve Insertion Position
    //both of them combined to solve the floor and ceil too
	//first & last occurance can also be found, first = lowerBound & last = upperBound-1
   public static int lowerBound(int []arr, int n, int x) {
        int low = 0, high = n - 1;
        int ans = n;

        while (low <= high) {
            int mid = (low + high) / 2;
            // maybe an answer
            if (arr[mid] >= x) {
                ans = mid;
                //look for smaller index on the left
                high = mid - 1;
            } else {
                low = mid + 1; // look on the right
            }
        }
        return ans;
    } 
   
   public static int upperBound(int []arr, int n, int x) {
        int low = 0, high = n - 1;
        int ans = n;

        while (low <= high) {
            int mid = (low + high) / 2;
            // maybe an answer
            if (arr[mid] > x) {
                ans = mid;
                //look for smaller index on the left
                high = mid - 1;
            } else {
                low = mid + 1; // look on the right
            }
        }
        return ans;
    } 
    
    public static void main(String[] args) {
        int[] arr = {3, 5, 8, 15, 19};
        int n = 5, x = 9;
        int indOfLB = lowerBound(arr, n, x);
        System.out.println("The lower bound is the index: " + indOfLB);
        int indOfUB = upperBound(arr, n, x);
        System.out.println("The Upper bound is the index: " + indOfUB);
    }
}
